//
//  DataViewController.swift
//  Connectastic
//
//  Created by Manik Surtani on 10/23/14.
//  Copyright (c) 2014 Manik Surtani. All rights reserved.
//

// Facebook integration tips from http://www.brianjcoleman.com/tutorial-facebook-login-in-swift/ and http://www.appcoda.com/ios-programming-facebook-login-sdk/

import UIKit

class DataViewController: UIViewController, FBLoginViewDelegate {
    
    @IBOutlet weak var dataLabel: UILabel!  // Generated by the XCode template
    @IBOutlet var fbProfilePicView : FBProfilePictureView!
    @IBOutlet var fbLoginView : FBLoginView!  // Use a FBLoginView to display a logout button
    @IBOutlet var loginMessage : UILabel!  // To display a message if the user isn't logged in

    var dataModel: DataModel? // Make this optional; we will initialize later

    override func viewDidLoad() {
        print("Loaded DataViewController")
        super.viewDidLoad()
        self.fbLoginView.delegate = self
        self.fbLoginView.readPermissions = ["public_profile", "email", "user_friends"]        
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)
        if let user: FBGraphUser = self.dataModel?.fbUser {
            dataLabel.text = "Welcome, " + user.first_name
            fbProfilePicView.hidden = false
            dataLabel.hidden = false
            loginMessage.hidden = true
        } else {
            fbProfilePicView.hidden = true
            dataLabel.hidden = true
            println("fbUser not set!  How did we get here?")
        }
    }
    
    func initialize(dataModel: DataModel) {
        self.dataModel = dataModel
    }
    
    // Facebook Delegate Methods - duplicated from RootViewController.  Sadness!
    
    func loginViewShowingLoggedInUser(loginView : FBLoginView!) {
    }
    
    func loginViewFetchedUserInfo(loginView : FBLoginView!, user: FBGraphUser) {
        dataModel?.setFbUser(user)
        viewWillAppear(true)
    }
    
    func loginViewShowingLoggedOutUser(loginView : FBLoginView!) {
        println("User Logged Out")
        disableScreen()
    }
    
    func loginView(loginView : FBLoginView!, handleError:NSError) {
        println("Error: \(handleError.localizedDescription)")
    }
    
    // Disables all UI elements on this screen by greying them out or hiding them.  Also see viewWillAppear(), which does the opposite.
    func disableScreen() {
        fbProfilePicView.hidden = true
        dataLabel.hidden = true
        loginMessage.hidden = false
        loginMessage.numberOfLines = 0
    }
}

