/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2014 Google Inc.
 */

//
//  GTLQueryAuth.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   auth/v1
// Description:
//   Logs users in and out, and retrieves a user's details.
// Classes:
//   GTLQueryAuth (4 custom class methods, 1 custom properties)

#import "GTLQueryAuth.h"

#import "GTLAuthConnectasticAuthReq.h"
#import "GTLAuthConnectasticAuthRsp.h"
#import "GTLAuthConnectasticRecordInvitationsReq.h"
#import "GTLAuthConnectasticRegisterReq.h"

@implementation GTLQueryAuth

@dynamic fields;

#pragma mark -
#pragma mark Service level methods
// These create a GTLQueryAuth object.

+ (id)queryForLoginWithObject:(GTLAuthConnectasticAuthReq *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"auth.login";
  GTLQueryAuth *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLAuthConnectasticAuthRsp class];
  return query;
}

+ (id)queryForLogoutWithObject:(GTLAuthConnectasticAuthReq *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"auth.logout";
  GTLQueryAuth *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (id)queryForRecordInvitationWithObject:(GTLAuthConnectasticRecordInvitationsReq *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"auth.record_invitation";
  GTLQueryAuth *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (id)queryForRegisterWithObject:(GTLAuthConnectasticRegisterReq *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"auth.register";
  GTLQueryAuth *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLAuthConnectasticAuthRsp class];
  return query;
}

@end
