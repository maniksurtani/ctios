/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQueryEvents.h
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   events/v1
// Description:
//   Handles events
// Classes:
//   GTLQueryEvents (9 custom class methods, 4 custom properties)

#if GTL_BUILT_AS_FRAMEWORK
  #import "GTL/GTLQuery.h"
#else
  #import "GTLQuery.h"
#endif

@class GTLEventsConnectasticModifyEventReq;
@class GTLEventsConnectasticNewEventReq;
@class GTLEventsConnectasticUpdateParticipantsReq;

@interface GTLQueryEvents : GTLQuery

//
// Parameters valid on all methods.
//

// Selector specifying which fields to include in a partial response.
@property (nonatomic, copy) NSString *fields;

//
// Method-specific parameters; see the comments below for more information.
//
@property (nonatomic, copy) NSString *eventId;
// identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSString *token;

#pragma mark - Service level methods
// These create a GTLQueryEvents object.

// Method: events.cancel
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
+ (instancetype)queryForCancelWithIdentifier:(NSString *)identifier
                                       token:(NSString *)token;

// Method: events.create
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
// Fetches a GTLEventsConnectasticCreateEventRsp.
+ (instancetype)queryForCreateWithObject:(GTLEventsConnectasticNewEventReq *)object;

// Method: events.edit
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
+ (instancetype)queryForEditWithObject:(GTLEventsConnectasticModifyEventReq *)object;

// Method: events.get
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
// Fetches a GTLEventsConnectasticEventRsp.
+ (instancetype)queryForGetWithIdentifier:(NSString *)identifier
                                    token:(NSString *)token;

// Method: events.list_details
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
// Fetches a GTLEventsConnectasticEventsRsp.
+ (instancetype)queryForListDetailsWithIdentifier:(NSString *)identifier
                                            token:(NSString *)token;

// Method: events.list_summary
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
// Fetches a GTLEventsConnectasticEventsRsp.
+ (instancetype)queryForListSummaryWithIdentifier:(NSString *)identifier
                                            token:(NSString *)token;

// Method: events.pick
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
+ (instancetype)queryForPickWithEventId:(NSString *)eventId
                             identifier:(NSString *)identifier
                                  token:(NSString *)token;

// Method: events.unpick
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
+ (instancetype)queryForUnpickWithIdentifier:(NSString *)identifier
                                       token:(NSString *)token;

// Method: events.update_participants
//  Authorization scope(s):
//   kGTLAuthScopeEventsUserinfoEmail
+ (instancetype)queryForUpdateParticipantsWithObject:(GTLEventsConnectasticUpdateParticipantsReq *)object;

@end
